01. Create IAM OIDC identity provider

	eksctl utils associate-iam-oidc-provider --cluster <cluster_name> --approve

02. View Cluster's OIDC provider URL

	aws eks describe-cluster --name <cluster_name> --query "cluster.identity.oidc.issuer" --output text

03. View IAM OIDC providers

	aws iam list-open-id-connect-providers | grep <EXAMPLED539D4633E53DE1B716D3041E>

04. Create an IAM role and annotate the Kubernetes service account named aws-load-balancer-controller in the kube-system namespace for the AWS Load Balancer Controller using eksctl

  eksctl create iamserviceaccount \
  --cluster=my-cluster \
  --namespace=kube-system \
  --name=aws-load-balancer-controller \
  --attach-policy-arn=arn:aws:iam::<AWS_ACCOUNT_ID>:policy/AWSLoadBalancerControllerIAMPolicy \
  --override-existing-serviceaccounts \
  --approve                

05. Install the TargetGroupBinding custom resource definitions

	kubectl apply -k "github.com/aws/eks-charts/stable/aws-load-balancer-controller//crds?ref=master"

06. Download helm and unzip 

	wget https://get.helm.sh/helm-v3.5.4-linux-amd64.tar.gz

	tar -zxvf helm-v3.5.4-linux-amd64.tar.gz

07. mv helm binary file to /usr/local/bin

	mv linux-amd64/helm /usr/local/bin/

08. Add the eks-charts repository

	helm repo add eks https://aws.github.io/eks-charts

09. Install the AWS LoadBalancer Controller

helm upgrade -i aws-load-balancer-controller eks/aws-load-balancer-controller \
  --set clusterName=<cluster-name> \
  --set serviceAccount.create=false \
  --set serviceAccount.name=aws-load-balancer-controller \
  -n kube-system

10. Verify that the controller is installed.

	kubectl get deployment -n kube-system aws-load-balancer-controller
